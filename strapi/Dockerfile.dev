FROM node:lts-alpine3.20 AS build

RUN apk update && apk add --no-cache \
    build-base gcc autoconf automake zlib-dev libpng-dev nasm bash \
    vips-dev git curl supervisor > /dev/null 2>&1

ARG NODE_ENV=development
ENV NODE_ENV=${NODE_ENV}

# Create application directory and set ownership early
RUN mkdir -p /opt/app && chown node:node /opt/app

# Enable corepack before switching to node user
RUN corepack enable

# Switch to user node
USER node

# Set working directory explicitly after user switch
WORKDIR /opt/app

# Install Pulumi ESC cli as node user
RUN curl -fsSL https://get.pulumi.com/esc/install.sh | sh

# Add esc CLI to PATH for node user
ENV PATH="/home/node/.pulumi/bin:${PATH}"

# Copy yarnrc config before installing dependencies
COPY --chown=node:node .yarnrc.yml ./

# Copy yarn install state file for node_modules state
COPY --chown=node:node .yarn/install-state.gz ./.yarn/install-state.gz

# Copy package files (small, quick)
COPY --chown=node:node package.json yarn.lock ./
RUN corepack enable
RUN yarn install --immutable

# Update PATH adding node_module/.bin to avoid using global node_modules
# This is important for running strapi commands
# and for running the app in development mode
ENV PATH=/opt/app/node_modules/.bin:$PATH

# Copy app files 
COPY --chown=node:node . .

# Backup config 
RUN mkdir -p /opt/app/config-backup && cp -r /opt/app/config/* /opt/app/config-backup/

# Supervisor config
COPY --chown=node:node supervisor.conf /etc/supervisor/conf.d/supervisor.conf

# Entrypoint setup
COPY --chown=node:node entrypoint.sh /opt/app/dev-entrypoint.sh
RUN chmod +x /opt/app/dev-entrypoint.sh

# Build application
RUN yarn run build

# Expose necessary ports
EXPOSE 1337 5173

ENTRYPOINT ["/opt/app/dev-entrypoint.sh"]
CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisor.conf"]
